1.创建砖块
2.初始化小球的样式
3.初始化挡板的样式
4.碰撞检测
5.计分,打中砖块记一分

实现思路
1.创建构造函数并创建相关的属性
2.在构造函数中使用this调用统筹函数inite
3.在inite中调用实现功能的方法来实现功能
4.封装功能函数
	(1).创建砖块
		1).8行12列(双层for循环),并追加进去
			<1>.offset系列属性只能获取页面内部元素的各种属性,如果是动态创建的
				元素,必须在追加到页面内部之后才能获取。
		2).注意:在绑定事件的时候既可以连在一起写,也可以将事件处理函数单独
				分出来写。
	(2).创建小球
		1).当给页面绑定点击事件的时候,点击让小球发射,发射在这里直接调用方法
			来实现
		2).方法函数中的this要指向实例化对象
	(3).初始化挡板
		1).两种方法
			<1>.鼠标移动事件(给页面绑定onmousemove事件)
			<2>.bind方法
		2).通过bind来改变事件处理函数的this指向问题
			<1>.bind由函数来调用。
			<2>.bind的第一个参数表示改变后的this指向。
			<3>.bind的返回值是复制好并改变完this的新函数。

5.Js中做动画新方法
	(1).requestAnimationFrame()
		1).响应式动画框架
		2).这个方法需要接收一个回调函数,该方法会自动给回调函数添加定时器,
		   定时器的时间间隔由计算机指定,一般是15毫秒。
	(2).砖块的碰撞检测
		1).如果碰到某一块就让其消失
		2).removeChild方法
		3).父元素.removeChild(某一个子元素)
		4).location.reload():可以刷新页面
打砖块思路总结
	1.创建构造函数(设置一些方法中需要用到的属性);
	2.在构造函数中调用初始化inite方法
	3.编写inite方法,在inite中调用各种方法(初始化后续所有的功能)
	4.编写各种功能函数 createBall(创建小球)、createWard(初始化挡板)
		、createBrick(创建砖块)
	5.在createBall中调用一个让小球移动的方法(ballMove方法)
	6.编写ballMove方法,并且在该方法中给小球定位之前做碰撞检测,调用crush方法
	7.编写crush方法
	8.编写游戏结束和计分方法

重难点总结
	1.获取浏览器窗口高度:window.innerHeight
	2.页面重新加载:		 location.reload()
	3.响应式动画序列:    requestAnimationFrame(回调函数)
难点：
	1.this指向
	2.bind函数的调用





















